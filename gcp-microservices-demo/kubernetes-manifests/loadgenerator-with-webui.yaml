apiVersion: v1
kind: Namespace
metadata:
  name: gcpdemo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loadgenerator-with-webui
  namespace: gcpdemo
spec:
  selector:
    matchLabels:
      app: loadgenerator-with-webui
  replicas: 1
  template:
    metadata:
      labels:
        app: loadgenerator-with-webui
    spec:
      nodeName: eb70170
      terminationGracePeriodSeconds: 5
      restartPolicy: Always
      initContainers:
      - command:
        - /bin/sh
        - -exc
        - |
          echo "Init container pinging frontend: ${FRONTEND_ADDR}..."
          STATUSCODE=$(wget --server-response http://${FRONTEND_ADDR} 2>&1 | awk '/^  HTTP/{print $2}')
          if test $STATUSCODE -ne 200; then
              echo "Error: Could not reach frontend - Status code: ${STATUSCODE}"
              exit 1
          fi
        name: frontend-check
        image: busybox
        imagePullPolicy: IfNotPresent
        env:
        - name: FRONTEND_ADDR
          value: "frontend.gcpdemo.svc.cluster.local:80"
      containers:
      - name: main
        image: registry.cn-beijing.aliyuncs.com/eb-k8s/loadgenerator-with-webui:v1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: web
          containerPort: 8089
        resources:
          requests:
            cpu: 300m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
---
apiVersion: v1
kind: Service
metadata:
  name: loadgenerator-with-webui
  namespace: gcpdemo
spec:
  type: NodePort
  selector:
    app: loadgenerator-with-webui
  ports:
  - name: web
    port: 8089
    targetPort: 8089
